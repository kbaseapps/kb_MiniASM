#
# define display information
#
name: Assemble with MiniASM - v0.2
tooltip: |
    Assemble long reads using the ultrafast MiniASM assembler.
screenshots: []

icon: MiniASM.png

#
# define a set of similar methods that might be useful to the user
#
suggestions:
    apps:
        related:
            []
        next:
            []
    methods:
        related:
            []
        next:
            [annotate_contigset]

#
# Configure the display and description of parameters
#
parameter-groups:
        opt_args :
                ui-name : |
                        Optional Parameters
                short-hint : |
                        min_span, min_coverage and min_overlap
                long-hint : |
                        min_span, min_coverage and min_overlap

parameters :
    read_libraries :
        ui-name : |
            Read library
        short-hint : |
            The libraries of reads to be assembled. Reads length should be <= 512.
    output_contigset_name :
        ui-name : |
            Output ContigSet
        short-hint : |
            The name under which the resulting ContigSet will be saved in the Narrative
    min_contig :
        ui-name : |
            Minimum Contig Length
        short-hint : |
            The shortest contig to accept in the resulting assembly object, should be < largest contig size
    min_span :
        ui-name : |
            min span
        short-hint : |
            min span
    min_coverage :
        ui-name : |
            min coverage
        short-hint : |
            min coverage
    min_overlap :
        ui-name : |
            min overlap
        short-hint : |
            min overlap
    extra_params :
        ui-name : |
            Advanced assembly parameters
        short-hint : |
            Enter extra assembly parameters as strings

#
# Configure the display and description of parameters
#

description : |
    <p>
    This is a KBase wrapper for
    <https://github.com/lh3/miniasm" target="_blank">MiniASM</a>
    </p>

    <p>
    MiniASM is an ultra-fast overlap-layout-consensus based de novo assembler for noisy long reads
    developed by Heng Li. It has been shown to assemble ~50X microbial PacBio reads into a draft assembly
    of a small number of (sometimes 1) contigs in a matter of minutes. MiniASM derives this performance
    from a locality-sensitive hashing based overlapper implemented in minimap.
    </p>
    <p>
    <b>Known limitations:</b>  MiniASM does not support short Illumina reads.
    MiniASM is still in early development stage, and has only been tested on a dozen of PacBio and Oxford
    Nanopore bacterial data sets. The consensus sequence computed by MiniASM may not be as accurate
    as slower and more mature methods such as HGAP3.
    </p>
    <b>Parameters:</b>
    <pre>
    Usage: miniasm [options]
    Options:
      Pre-selection:
        -R          prefilter clearly contained reads (2-pass required)
        -m INT      min match length [100]
        -i FLOAT    min identity [0.05]
        -s INT      min span [2000]
        -c INT      min coverage [3]
      Overlap:
        -o INT      min overlap [same as -s]
        -h INT      max over hang length [1000]
        -I FLOAT    min end-to-end match ratio [0.8]
      Layout:
        -g INT      max gap differences between reads for trans-reduction [1000]
        -d INT      max distance for bubble popping [50000]
        -e INT      small unitig threshold [4]
        -f FILE     read sequences []
        -n INT      rounds of short overlap removal [3]
        -r FLOAT[,FLOAT]
                    max and min overlap drop ratio [0.7,0.5]
        -F FLOAT    aggressive overlap drop ratio in the end [0.8]
      Miscellaneous:
        -p STR      output information: bed, paf, sg or ug [ug]
        -b          both directions of an arc are present in input
        -1          skip 1-pass read selection
        -2          skip 2-pass read selection
        -V          print version number
    </pre>

publications :
    -
        display-text : |
            <https://github.com/lh3/miniasm" target="_blank">https://github.com/lh3/miniasm</a>
